{"version":3,"sources":["components/header/index.jsx","pages/layout/index.jsx","pages/payment-success/index.jsx","App.js","reportWebVitals.js","index.js","store/initialstate.js","store/slices/user.js","store/slices/config.js","store/reducers/index.js","store/index.js","pages/spotlight/index.jsx","components/spotlight-stock/index.jsx","services/index.js"],"names":["withStyles","theme","withTheme","props","classes","AppBar","className","appbar","Toolbar","Typography","variant","PLayout","this","children","root","Box","wrapper","Component","padding","margin","minHeight","paddingTop","backgroundColor","paddingBottom","image","height","marginTop","marginBottom","display","flexDirection","justifyContent","alignItems","src","to","App","store","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","user","username","fullName","email","phone","config","razorPayKey","apiEndpoint","window","location","origin","userSlice","createSlice","name","initialState","initialstate","reducers","actions","configSlice","combineReducers","userReducer","configReducer","configureStore","reducer","rootReducer","PSpotlight","state","loading","spotlights","id","currentValue","changeValue","changePercent","data","happiestMindsData","adaniTransmissiondata","handlerOrderRequest","bind","scripType","stockId","stockName","market","quantity","a","setState","createOrder","order","options","key","amount","currency","description","order_id","callback_url","prefill","contact","color","global","Razorpay","open","alert","header","map","stock","i","onOrderRequest","backdrop","zIndex","drawer","connect","headerText","marginLeft","fontSize","positiveColor","negativeColor","buyButton","background","fontWeight","marginRight","sellButton","headerTextContainer","paddingLeft","series","xy","x","Date","y","container","item","md","sm","toFixed","style","size","onClick","chartContainer","xaxis","type","yaxis","tooltip","enabled","getState","client","axios","create","baseURL","orderType","payload","post","res","response"],"mappings":"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","file":"static/js/main.2e395969.chunk.js","sourcesContent":["import { Typography, withStyles } from \"@material-ui/core\";\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n    \r\n});\r\n\r\nfunction CHeader (props) {\r\n\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <AppBar className={classes.appbar}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\">Future Perfect</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CHeader);","import { Box, withStyles } from \"@material-ui/core\";\r\nimport { Component } from \"react\";\r\n\r\nimport CHeader from \"../../components/header\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        padding: 0,\r\n        margin: 0\r\n    },\r\n    wrapper: {\r\n        minHeight: \"calc(100vh - 64px - 40px)\",\r\n        paddingTop: \"84px\",\r\n        padding: \"20px\",\r\n        backgroundColor: \"#f5f5f5\",\r\n        paddingBottom: \"30px\"\r\n    }\r\n});\r\nclass PLayout extends Component {\r\n\r\n    render() {\r\n\r\n        const {classes, children} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CHeader />\r\n                <Box className={classes.wrapper}>\r\n                    {children}\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(PLayout);","import { Typography } from \"@material-ui/core\";\r\nimport { Box, Button, withStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n    image: {\r\n        height: \"100px\",\r\n        marginTop: \"30px\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    wrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nfunction PPaymentSuccess(props) {\r\n\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <img className={classes.image} src=\"checked.png\" />\r\n            <Typography variant=\"h4\">Payment Success !</Typography>\r\n            <br />\r\n            <Typography variant=\"body1\">You have successfully made an investment</Typography>\r\n            <Typography><Link to=\"/\">Click here</Link> to explore the top stocks</Typography>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(PPaymentSuccess);","import { Provider as StoreProvider } from \"react-redux\";\nimport { HashRouter as BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport store from \"./store\";\n\nimport PLayout from \"./pages/layout\";\nimport PSpotlight from \"./pages/spotlight\";\nimport PPaymentSuccess from \"./pages/payment-success\";\n\nfunction App() {\n\treturn (\n\t\t<StoreProvider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<PLayout>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t\t<PSpotlight />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/success\">\n\t\t\t\t\t\t\t<PPaymentSuccess />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</PLayout>\n\t\t\t</BrowserRouter>\n\t\t</StoreProvider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default {\r\n    user: {\r\n        username: \"testuser01\",\r\n        fullName: \"Test User 01\",\r\n        email: \"xdavid321@gmail.com\",\r\n        phone: \"+919003832035\"\r\n    },\r\n    config: {\r\n        razorPayKey: \"rzp_test_m24mKEdbGMonLz\",\r\n        apiEndpoint: window.location.origin == \"http://localhost:3000\" ? \"http://localhost:3001/api\" : `${window.location.origin}/api`\r\n    }\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport initialstate from \"../initialstate\";\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: initialstate.user,\r\n    reducers: {\r\n\r\n    }\r\n});\r\n\r\nexport default userSlice.reducer;\r\nexport const {} = userSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport initialstate from \"../initialstate\";\r\n\r\nconst configSlice = createSlice({\r\n    name: \"config\",\r\n    initialState: initialstate.config,\r\n    reducers: {\r\n\r\n    }\r\n});\r\n\r\nexport default configSlice.reducer;","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport userReducer from \"../slices/user\";\r\nimport configReducer from \"../slices/config\";\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    config: configReducer\r\n});\r\n\r\nexport default reducers;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer\r\n});\r\n\r\nexport default store;","import { Box, withStyles, Typography, Divider, Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CSpotlightStock from \"../../components/spotlight-stock\";\r\nimport { createOrder } from \"../../services\";\r\n\r\nimport happiestMindsData from \"./happiestMinds.json\";\r\nimport adaniTransmissiondata from \"./adaniTransmission.json\";\r\n\r\n\r\nconst styles = (theme) => ({\r\n    header: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n});\r\nclass PSpotlight extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            spotlights: [\r\n                {\r\n                    id: \"H-081530\",\r\n                    name: \"Happiest Minds Technologies\",\r\n                    currentValue: 1190.75,\r\n                    changeValue: 54.10,\r\n                    changePercent: 4.76,\r\n                    data: happiestMindsData.data\r\n                },\r\n                {\r\n                    id: \"A-473782\",\r\n                    name: \"ADANI TRANSMISSION\",\r\n                    currentValue: 956.20,\r\n                    changeValue: -50.30,\r\n                    changePercent: 5,\r\n                    data: adaniTransmissiondata.data\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.handlerOrderRequest = this.handlerOrderRequest.bind(this);\r\n    }\r\n\r\n    async handlerOrderRequest(scripType, stockId, stockName, market, quantity, currentValue) {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        try {\r\n            const order = await createOrder(currentValue, stockId, scripType, \"DELIVERY\", market);    \r\n            this.setState({loading: false});\r\n            const options = {\r\n                key: \"\",\r\n                amount: currentValue,\r\n                currency: \"INR\",\r\n                name: \"Future Perfect\",\r\n                description: `${scripType} order for ${stockName}`,\r\n                order_id: order.id,\r\n                callback_url: `${this.props.config.apiEndpoint}/payment/confirm`,\r\n                prefill: {\r\n                    name: this.props.user.fullName,\r\n                    email: this.props.user.email,\r\n                    contact: this.props.user.phone\r\n                },\r\n                theme: {\r\n                    color: \"#3f51b5\"\r\n                }\r\n            }\r\n            const razorPay = new global.Razorpay(options);\r\n            razorPay.open();\r\n        } catch (error) {\r\n            this.setState({loading: false});\r\n            alert(\"payment could not be processed now !\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h4\" className={classes.header}><b>Stocks in Spotlight</b></Typography>\r\n                <Divider />\r\n                {\r\n                    this.state.spotlights.map((stock, i) => (\r\n                        <CSpotlightStock\r\n                            currentValue={stock.currentValue}\r\n                            changeValue={stock.changeValue}\r\n                            changePercent={stock.changePercent}\r\n                            stockName={stock.name}\r\n                            stockId={stock.id}\r\n                            data={stock.data}\r\n                            onOrderRequest={this.handlerOrderRequest}\r\n                            key={i}\r\n                        />\r\n                    ))\r\n                }\r\n                <Backdrop className={classes.backdrop} open={this.state.loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    config: state.config\r\n})\r\n\r\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps)(PSpotlight));","import { Button, Divider, Grid, styled } from \"@material-ui/core\";\r\nimport { Box, Paper, Typography, withStyles } from \"@material-ui/core\";\r\nimport ApexCharts from \"react-apexcharts\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        padding: \"10px\",\r\n        marginTop: \"15px\",\r\n        marginBottom: \"15px\"\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    headerText: {\r\n        marginLeft: \"20px\"\r\n    },\r\n    changeValue: {\r\n        fontSize: \"1.2rem\",\r\n        marginLeft: \"10px\"\r\n    },\r\n    changePercent: {\r\n        fontSize: \"1.2rem\",\r\n        marginLeft: \"3px\"\r\n    },\r\n    positiveColor: {\r\n        color: \"#00b746\"\r\n    },\r\n    negativeColor: {\r\n        color: \"#ef403c\"\r\n    },\r\n    buyButton: {\r\n        background: \"#00b746\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        marginLeft: \"7.5px\",\r\n        marginRight: \"7.5px\",\r\n        '&:hover': {\r\n            background: \"green\"\r\n        }\r\n    },\r\n    sellButton: {\r\n        backgroundColor: \"#ef403c\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        marginLeft: \"7.5px\",\r\n        marginRight: \"7.5px\",\r\n        '&:hover': {\r\n            background: \"#cb322f\"\r\n        }\r\n    },\r\n    headerTextContainer: {\r\n        paddingLeft: \"20px\"\r\n    }\r\n\r\n});\r\n\r\nfunction CSpotlightStock(props) {\r\n\r\n    const {classes} = props;\r\n\r\n\tconst series = [\r\n\t\t{\r\n\t\t\tdata: props.data.map((xy) => ({\r\n                x: new Date(xy.x),\r\n                y: xy.y\r\n            }))\r\n\t\t}\r\n\t];\r\n\r\n    const options = {\r\n        xaxis: {\r\n          type: 'datetime'\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true\r\n          }\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Grid container>\r\n                <Grid item md={6} sm={12} className={classes.headerTextContainer}>\r\n                    <Typography variant=\"h6\">\r\n                        <b>{props.stockName}</b>\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <span className={classes.currentValue}>{props.currentValue}</span>\r\n                        <span className={props.changeValue > 0 ? classes.positiveColor : classes.negativeColor}>\r\n                            <span className={classes.changeValue}>{props.changeValue > 0 ? \"+\" : \"-\"}{props.changeValue.toFixed(2)}</span>\r\n                            <span className={classes.changePercent}>({props.changePercent.toFixed(2)}%)</span>\r\n                        </span>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item md={6} sm={12} style={{paddingTop: \"10px\", display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\"}}>\r\n                    <Button size=\"small\" className={classes.buyButton} onClick={() => {props.onOrderRequest(\"BUY\", props.stockId, props.stockName, \"NSE\", props.currentValue, props.currentValue)}}>BUY</Button>\r\n                    <Button size=\"small\" className={classes.sellButton} onClick={() => {props.onOrderRequest(\"SELL\", props.stockId, props.stockName, \"NSE\", props.currentValue, props.currentValue)}}>SELL</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider style={{marginTop: \"10px\", marginBottom: \"10px\"}} />\r\n            <Box classes={classes.chartContainer}>\r\n                <ApexCharts\r\n                    options={options}\r\n                    series={series}\r\n                    height=\"300px\"\r\n                    type=\"candlestick\"\r\n                />\r\n            </Box>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CSpotlightStock);","import axios from \"axios\";\r\n\r\nimport store from \"../store\";\r\n\r\nconst { config, user } = store.getState();\r\n\r\nconst client = axios.create({\r\n    baseURL: config.apiEndpoint\r\n});\r\n\r\n/**\r\n * \r\n * @param {Number} amount \r\n * @param {String} stockId \r\n * @param {String} orderType \r\n * @param {String} market \r\n * @returns {Order}\r\n */\r\nexport const createOrder = async (amount, stockId, scripType, orderType, market) => {\r\n\r\n    /**\r\n     * @type {CreateOrderPayload}\r\n     */\r\n    const payload = {\r\n        amount,\r\n        market,\r\n        stockId,\r\n        orderType,\r\n        scripType,\r\n        username: user.username\r\n    }\r\n\r\n    const response = await client.post(\"/order\", payload).then((res) => {\r\n        return res.data;\r\n    });\r\n    return response;\r\n}\r\n\r\n/** @typedef {Object} CreateOrderPayload\r\n * @property {Number} amount\r\n * @property {String} market\r\n * @property {String} orderType\r\n * @property {String} scripType\r\n * @property {String} stockId\r\n * @property {String} username\r\n */\r\n\r\n/** @typedef {Object} Order\r\n * @property {Number} amount\r\n * @property {Number} amount_due\r\n * @property {Number} amount_paid\r\n * @property {Number} attempts\r\n * @property {Number} created_at\r\n * @property {String} currency\r\n * @property {String} entity\r\n * @property {String} id\r\n * @property {Array} notes\r\n * @property {Null} offer_id\r\n * @property {String} receipt\r\n * @property {String} status\r\n */\r\n\r\n"],"sourceRoot":""}